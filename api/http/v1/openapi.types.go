// Package v1 provides primitives to interact with the openapi HTTP API.
//
// Code generated by github.com/deepmap/oapi-codegen/v2 version v2.1.0 DO NOT EDIT.
package v1

import (
	openapi_types "github.com/oapi-codegen/runtime/types"
)

const (
	BearerAuthScopes = "BearerAuth.Scopes"
)

// Defines values for HostRole.
const (
	HostRoleLighthouse HostRole = "lighthouse"
	HostRoleNone       HostRole = "none"
)

// Defines values for HostFindOptionsRole.
const (
	HostFindOptionsRoleLighthouse HostFindOptionsRole = "lighthouse"
	HostFindOptionsRoleNone       HostFindOptionsRole = "none"
)

// Defines values for HostRuleAction.
const (
	HostRuleActionAllow HostRuleAction = "allow"
	HostRuleActionDeny  HostRuleAction = "deny"
)

// Defines values for HostRuleProto.
const (
	HostRuleProtoAny  HostRuleProto = "any"
	HostRuleProtoIcmp HostRuleProto = "icmp"
	HostRuleProtoTcp  HostRuleProto = "tcp"
	HostRuleProtoUdp  HostRuleProto = "udp"
)

// Defines values for HostRuleType.
const (
	HostRuleTypeInbound  HostRuleType = "inbound"
	HostRuleTypeOutbound HostRuleType = "outbound"
)

// Defines values for RuleAction.
const (
	RuleActionAllow RuleAction = "allow"
	RuleActionDeny  RuleAction = "deny"
)

// Defines values for RuleProto.
const (
	RuleProtoAny  RuleProto = "any"
	RuleProtoIcmp RuleProto = "icmp"
	RuleProtoTcp  RuleProto = "tcp"
	RuleProtoUdp  RuleProto = "udp"
)

// Defines values for RuleType.
const (
	RuleTypeInbound  RuleType = "inbound"
	RuleTypeOutbound RuleType = "outbound"
)

// Defines values for CreateHostJSONBodyRole.
const (
	Lighthouse CreateHostJSONBodyRole = "lighthouse"
	None       CreateHostJSONBodyRole = "none"
)

// ChangePasswordRequest defines model for ChangePasswordRequest.
type ChangePasswordRequest struct {
	ConfirmPassword string `json:"confirm_password"`
	NewPassword     string `json:"new_password"`
	OldPassword     string `json:"old_password"`
}

// CheckEnrollCodeResponse defines model for CheckEnrollCodeResponse.
type CheckEnrollCodeResponse struct {
	// Exists 如果存在表示还没注册
	Exists *bool `json:"exists,omitempty"`
}

// CreateEnrollCodeResponse defines model for CreateEnrollCodeResponse.
type CreateEnrollCodeResponse struct {
	// Code The enroll code
	Code            string `json:"code"`
	LifetimeSeconds int64  `json:"lifetime_seconds"`
}

// CreateNetworkRequest defines model for CreateNetworkRequest.
type CreateNetworkRequest struct {
	// Cidr CIDR notation of the network address and subnet mask (e.g., "192.168.1.0/24")
	Cidr string `json:"cidr"`

	// Name Name of the network
	Name string `json:"name"`
}

// CreateNetworkResponse defines model for CreateNetworkResponse.
type CreateNetworkResponse struct {
	// Cidr CIDR notation of the network address and subnet mask (e.g., "192.168.1.0/24")
	Cidr      string `json:"cidr"`
	CreatedAt string `json:"createdAt"`

	// Id ID of the network
	Id string `json:"id"`

	// Name Name of the network
	Name string `json:"name"`
}

// EnrollHostResponse defines model for EnrollHostResponse.
type EnrollHostResponse struct {
	Config     string `json:"config"`
	EnrollAt   int64  `json:"enroll_at"`
	HostId     string `json:"host_id"`
	LastSeenAt string `json:"last_seen_at"`
	Online     bool   `json:"online"`
}

// Host defines model for Host.
type Host struct {
	CreatedAt string `json:"created_at"`

	// Id ID of the host
	Id         string `json:"id"`
	IpAddress  string `json:"ip_address"`
	LastSeenAt string `json:"last_seen_at"`
	Name       string `json:"name"`
	NetworkId  string `binding:"required" json:"network_id"`

	// Online Whether the host is online or not
	Online bool `json:"online"`
	Port   int  `json:"port"`

	// PublicIp Public IP address
	PublicIp string   `json:"public_ip"`
	Role     HostRole `json:"role"`

	// StaticAddresses Static addresses
	StaticAddresses map[string]string      `json:"static_addresses"`
	Tags            map[string]interface{} `json:"tags"`
}

// HostRole defines model for Host.Role.
type HostRole string

// HostConfig defines model for HostConfig.
type HostConfig struct {
	Config string `json:"config"`
}

// HostFindOptions defines model for HostFindOptions.
type HostFindOptions struct {
	// Filters Filter options
	Filters map[string]interface{} `json:"filters"`

	// IpAddress Filter by IP address
	IpAddress string `json:"ip_address"`

	// Limit Number of results to return
	Limit int `json:"limit"`

	// Name Filter by name
	Name string `json:"name"`

	// NetworkId Filter by network ID
	NetworkId string `json:"network_id"`

	// Offset Offset for pagination
	Offset int `json:"offset"`

	// Role Filter by role
	Role HostFindOptionsRole `json:"role"`

	// Sort Sorting options
	Sort map[string]interface{} `json:"sort"`
}

// HostFindOptionsRole Filter by role
type HostFindOptionsRole string

// HostRule defines model for HostRule.
type HostRule struct {
	Action      HostRuleAction `json:"action"`
	CreatedAt   string         `json:"created_at"`
	Description string         `json:"description"`
	Host        []string       `json:"host"`
	HostId      string         `json:"host_id"`
	Id          string         `json:"id"`
	Name        string         `json:"name"`
	Port        string         `json:"port"`
	Proto       HostRuleProto  `json:"proto"`
	Type        HostRuleType   `json:"type"`
}

// HostRuleAction defines model for HostRule.Action.
type HostRuleAction string

// HostRuleProto defines model for HostRule.Proto.
type HostRuleProto string

// HostRuleType defines model for HostRule.Type.
type HostRuleType string

// LoginRequest defines model for LoginRequest.
type LoginRequest struct {
	Email    *openapi_types.Email `json:"email,omitempty"`
	Password *string              `json:"password,omitempty"`
}

// Network defines model for Network.
type Network struct {
	// Cidr CIDR notation of the network address and subnet mask (e.g., "192.168.1.0/24")
	Cidr string `json:"cidr"`

	// CreatedAt Creation timestamp
	CreatedAt string `json:"created_at"`

	// Id ID of the network
	Id string `json:"id"`

	// Name Name of the network
	Name string `json:"name"`
}

// Rule defines model for Rule.
type Rule struct {
	Action      RuleAction `json:"action"`
	CreatedAt   int        `json:"created_at"`
	Description string     `json:"description"`

	// Host 源地址
	Host  string    `json:"host"`
	Id    string    `json:"id"`
	Name  string    `json:"name"`
	Port  string    `json:"port"`
	Proto RuleProto `json:"proto"`
	Type  RuleType  `json:"type"`
}

// RuleAction defines model for Rule.Action.
type RuleAction string

// RuleProto defines model for Rule.Proto.
type RuleProto string

// RuleType defines model for Rule.Type.
type RuleType string

// RuleFindOptions defines model for RuleFindOptions.
type RuleFindOptions struct {
	// HostId Host ID
	HostId string `json:"host_id"`

	// PageNum Page number
	PageNum int `json:"page_num"`

	// PageSize Number of results to return
	PageSize int `json:"page_size"`
}

// SendCodeRequest defines model for SendCodeRequest.
type SendCodeRequest struct {
	Code  *string              `json:"code,omitempty"`
	Email *openapi_types.Email `json:"email,omitempty"`
}

// ShortHost defines model for ShortHost.
type ShortHost struct {
	CreatedAt string `json:"created_at"`

	// Id ID of the host
	Id         string `json:"id"`
	IpAddress  string `json:"ip_address"`
	LastSeenAt string `json:"last_seen_at"`
	Name       string `json:"name"`

	// Online Whether the host is online or not
	Online bool `json:"online"`
	Port   int  `json:"port"`

	// PublicIp Public IP address
	PublicIp string `json:"public_ip"`
}

// UserInfo defines model for UserInfo.
type UserInfo struct {
	Email       string `json:"email"`
	Id          string `json:"id"`
	LastLoginAt string `json:"last_login_at"`
}

// ListHostParams defines parameters for ListHost.
type ListHostParams struct {
	// FindOptions Options for filtering, sorting, and pagination
	FindOptions *HostFindOptions `form:"findOptions,omitempty" json:"findOptions,omitempty"`
}

// CreateHostJSONBody defines parameters for CreateHost.
type CreateHostJSONBody struct {
	// IpAddress IP address
	IpAddress string `json:"ip_address"`

	// IsLighthouse SIS lighthouse
	IsLighthouse bool `json:"is_lighthouse"`

	// Name Host name
	Name string `json:"name"`

	// NetworkId Network id
	NetworkId string `json:"network_id"`

	// Port Host listening port
	Port int `json:"port"`

	// PublicIp 公网ip
	PublicIp string `json:"public_ip"`

	// Role Host type
	Role  CreateHostJSONBodyRole `json:"role"`
	Rules []string               `json:"rules"`

	// StaticAddresses Static addresses
	StaticAddresses []string `json:"static_addresses"`
}

// CreateHostJSONBodyRole defines parameters for CreateHost.
type CreateHostJSONBodyRole string

// UpdateHostJSONBody defines parameters for UpdateHost.
type UpdateHostJSONBody struct {
	// IpAddress 主机IP
	IpAddress string `json:"ip_address"`

	// Name 主机名称
	Name string `json:"name"`

	// Port 主机端口
	Port int `json:"port"`

	// PublicIp 公网IP
	PublicIp string `json:"public_ip"`
}

// CheckEnrollCodeJSONBody defines parameters for CheckEnrollCode.
type CheckEnrollCodeJSONBody struct {
	Code string `json:"code"`
}

// ListHostRulesParams defines parameters for ListHostRules.
type ListHostRulesParams struct {
	// PageNum 页码
	PageNum *int `form:"page_num,omitempty" json:"page_num,omitempty"`

	// PageSize 页大小
	PageSize *int `form:"page_size,omitempty" json:"page_size,omitempty"`
}

// AddHostRuleJSONBody defines parameters for AddHostRule.
type AddHostRuleJSONBody struct {
	Rules []string `json:"rules"`
}

// ListRuleParams defines parameters for ListRule.
type ListRuleParams struct {
	// RuleFindOptions Options for filtering, sorting, and pagination
	RuleFindOptions *RuleFindOptions `form:"ruleFindOptions,omitempty" json:"ruleFindOptions,omitempty"`
}

// RegisterUserJSONBody defines parameters for RegisterUser.
type RegisterUserJSONBody struct {
	ConfirmPassword string              `json:"confirm_password"`
	Email           openapi_types.Email `json:"email"`

	// Name 用户名
	Name     *string `json:"name,omitempty"`
	Password string  `json:"password"`
}

// VerifyCodeParams defines parameters for VerifyCode.
type VerifyCodeParams struct {
	// Email User email address
	Email openapi_types.Email `form:"email" json:"email"`

	// Code Verification code
	Code string `form:"code" json:"code"`
}

// CreateHostJSONRequestBody defines body for CreateHost for application/json ContentType.
type CreateHostJSONRequestBody CreateHostJSONBody

// UpdateHostJSONRequestBody defines body for UpdateHost for application/json ContentType.
type UpdateHostJSONRequestBody UpdateHostJSONBody

// CheckEnrollCodeJSONRequestBody defines body for CheckEnrollCode for application/json ContentType.
type CheckEnrollCodeJSONRequestBody CheckEnrollCodeJSONBody

// AddHostRuleJSONRequestBody defines body for AddHostRule for application/json ContentType.
type AddHostRuleJSONRequestBody AddHostRuleJSONBody

// CreateNetworkJSONRequestBody defines body for CreateNetwork for application/json ContentType.
type CreateNetworkJSONRequestBody = CreateNetworkRequest

// UpdateNetworkJSONRequestBody defines body for UpdateNetwork for application/json ContentType.
type UpdateNetworkJSONRequestBody = Network

// CreateRuleJSONRequestBody defines body for CreateRule for application/json ContentType.
type CreateRuleJSONRequestBody = Rule

// ChangePasswordJSONRequestBody defines body for ChangePassword for application/json ContentType.
type ChangePasswordJSONRequestBody = ChangePasswordRequest

// LoginUserJSONRequestBody defines body for LoginUser for application/json ContentType.
type LoginUserJSONRequestBody = LoginRequest

// RegisterUserJSONRequestBody defines body for RegisterUser for application/json ContentType.
type RegisterUserJSONRequestBody RegisterUserJSONBody

// SendCodeJSONRequestBody defines body for SendCode for application/json ContentType.
type SendCodeJSONRequestBody = SendCodeRequest
