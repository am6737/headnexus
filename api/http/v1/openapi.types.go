// Package v1 provides primitives to interact with the openapi HTTP API.
//
// Code generated by github.com/deepmap/oapi-codegen/v2 version v2.1.0 DO NOT EDIT.
package v1

import (
	openapi_types "github.com/oapi-codegen/runtime/types"
)

const (
	BearerAuthScopes = "BearerAuth.Scopes"
)

// Defines values for HostRole.
const (
	Lighthouse HostRole = "lighthouse"
	None       HostRole = "none"
)

// Defines values for RuleAction.
const (
	Allow RuleAction = "allow"
	Deny  RuleAction = "deny"
)

// Defines values for RuleDirection.
const (
	RuleDirectionInbound  RuleDirection = "inbound"
	RuleDirectionOutbound RuleDirection = "outbound"
)

// Defines values for RuleProto.
const (
	Any  RuleProto = "any"
	Icmp RuleProto = "icmp"
	Tcp  RuleProto = "tcp"
	Udp  RuleProto = "udp"
)

// Defines values for RuleType.
const (
	RuleTypeInbound  RuleType = "inbound"
	RuleTypeOutbound RuleType = "outbound"
)

// ChangePasswordRequest defines model for ChangePasswordRequest.
type ChangePasswordRequest struct {
	NewPassword *string `json:"newPassword,omitempty"`
	OldPassword *string `json:"oldPassword,omitempty"`
}

// CheckEnrollCodeResponse defines model for CheckEnrollCodeResponse.
type CheckEnrollCodeResponse struct {
	// Exists 如果存在表示还没注册
	Exists *bool `json:"exists,omitempty"`
}

// CreateEnrollCodeResponse defines model for CreateEnrollCodeResponse.
type CreateEnrollCodeResponse struct {
	// Code The enroll code
	Code            string `json:"code"`
	LifetimeSeconds int64  `json:"lifetime_seconds"`
}

// CreateNetworkRequest defines model for CreateNetworkRequest.
type CreateNetworkRequest struct {
	// Cidr CIDR notation of the network address and subnet mask (e.g., "192.168.1.0/24")
	Cidr string `json:"cidr"`

	// Name Name of the network
	Name string `json:"name"`
}

// CreateNetworkResponse defines model for CreateNetworkResponse.
type CreateNetworkResponse struct {
	// Cidr CIDR notation of the network address and subnet mask (e.g., "192.168.1.0/24")
	Cidr      string `json:"cidr"`
	CreatedAt string `json:"createdAt"`

	// Id ID of the network
	Id string `json:"id"`

	// Name Name of the network
	Name string `json:"name"`
}

// FindOptions defines model for FindOptions.
type FindOptions struct {
	// Filters Filter options
	Filters map[string]interface{} `json:"filters"`

	// IpAddress Filter by IP address
	IpAddress string `json:"ip_address"`

	// IsLighthouse Filter by lighthouse status
	IsLighthouse bool `json:"is_lighthouse"`

	// Limit Number of results to return
	Limit int `json:"limit"`

	// Name Filter by name
	Name string `json:"name"`

	// NetworkId Filter by network ID
	NetworkId string `json:"network_id"`

	// Offset Offset for pagination
	Offset int `json:"offset"`

	// Role Filter by role
	Role string `json:"role"`

	// Sort Sorting options
	Sort map[string]interface{} `json:"sort"`
}

// Host defines model for Host.
type Host struct {
	CreatedAt string `json:"created_at"`

	// Id ID of the host
	Id           string `json:"id"`
	IpAddress    string `json:"ip_address"`
	IsLighthouse bool   `json:"is_lighthouse"`
	LastSeenAt   string `json:"last_seen_at"`
	Name         string `json:"name"`
	NetworkId    string `binding:"required" json:"network_id"`

	// Online Whether the host is online or not
	Online bool     `json:"online"`
	Port   int      `json:"port"`
	Role   HostRole `json:"role"`

	// StaticAddresses A list of static addresses for the host
	StaticAddresses []string               `json:"static_addresses"`
	Tags            map[string]interface{} `json:"tags"`
}

// HostRole defines model for Host.Role.
type HostRole string

// LoginRequest defines model for LoginRequest.
type LoginRequest struct {
	Email    *openapi_types.Email `json:"email,omitempty"`
	Password *string              `json:"password,omitempty"`
}

// Network defines model for Network.
type Network struct {
	// Cidr CIDR notation of the network address and subnet mask (e.g., "192.168.1.0/24")
	Cidr string `json:"cidr"`

	// CreatedAt Creation timestamp
	CreatedAt string `json:"created_at"`

	// Id ID of the network
	Id string `json:"id"`

	// Name Name of the network
	Name string `json:"name"`
}

// RegisterRequest defines model for RegisterRequest.
type RegisterRequest struct {
	Email    *openapi_types.Email `json:"email,omitempty"`
	Name     *string              `json:"name,omitempty"`
	Password *string              `json:"password,omitempty"`
}

// Rule defines model for Rule.
type Rule struct {
	Action      RuleAction    `json:"action"`
	CreatedAt   int           `json:"created_at"`
	Description string        `json:"description"`
	Direction   RuleDirection `json:"direction"`
	Host        []string      `json:"host"`
	HostId      string        `json:"host_id"`
	Id          string        `json:"id"`
	Name        string        `json:"name"`
	Port        string        `json:"port"`
	Proto       RuleProto     `json:"proto"`
	Type        RuleType      `json:"type"`
}

// RuleAction defines model for Rule.Action.
type RuleAction string

// RuleDirection defines model for Rule.Direction.
type RuleDirection string

// RuleProto defines model for Rule.Proto.
type RuleProto string

// RuleType defines model for Rule.Type.
type RuleType string

// RuleFindOptions defines model for RuleFindOptions.
type RuleFindOptions struct {
	// HostId Host ID
	HostId string `json:"host_id"`

	// PageNum Page number
	PageNum int `json:"page_num"`

	// PageSize Number of results to return
	PageSize int `json:"page_size"`
}

// VerifyCodeRequest defines model for VerifyCodeRequest.
type VerifyCodeRequest struct {
	Code  *string              `json:"code,omitempty"`
	Email *openapi_types.Email `json:"email,omitempty"`
}

// ListHostParams defines parameters for ListHost.
type ListHostParams struct {
	// FindOptions Options for filtering, sorting, and pagination
	FindOptions *FindOptions `form:"findOptions,omitempty" json:"findOptions,omitempty"`
}

// CreateEnrollJSONBody defines parameters for CreateEnroll.
type CreateEnrollJSONBody struct {
	Code string `json:"code"`
}

// CheckEnrollCodeJSONBody defines parameters for CheckEnrollCode.
type CheckEnrollCodeJSONBody struct {
	Code string `json:"code"`
}

// ListRuleParams defines parameters for ListRule.
type ListRuleParams struct {
	// RuleFindOptions Options for filtering, sorting, and pagination
	RuleFindOptions *RuleFindOptions `form:"ruleFindOptions,omitempty" json:"ruleFindOptions,omitempty"`
}

// CreateHostJSONRequestBody defines body for CreateHost for application/json ContentType.
type CreateHostJSONRequestBody = Host

// UpdateHostJSONRequestBody defines body for UpdateHost for application/json ContentType.
type UpdateHostJSONRequestBody = Host

// CreateEnrollJSONRequestBody defines body for CreateEnroll for application/json ContentType.
type CreateEnrollJSONRequestBody CreateEnrollJSONBody

// CheckEnrollCodeJSONRequestBody defines body for CheckEnrollCode for application/json ContentType.
type CheckEnrollCodeJSONRequestBody CheckEnrollCodeJSONBody

// CreateNetworkJSONRequestBody defines body for CreateNetwork for application/json ContentType.
type CreateNetworkJSONRequestBody = CreateNetworkRequest

// UpdateNetworkJSONRequestBody defines body for UpdateNetwork for application/json ContentType.
type UpdateNetworkJSONRequestBody = Network

// CreateRuleJSONRequestBody defines body for CreateRule for application/json ContentType.
type CreateRuleJSONRequestBody = Rule

// ChangePasswordJSONRequestBody defines body for ChangePassword for application/json ContentType.
type ChangePasswordJSONRequestBody = ChangePasswordRequest

// LoginUserJSONRequestBody defines body for LoginUser for application/json ContentType.
type LoginUserJSONRequestBody = LoginRequest

// RegisterUserJSONRequestBody defines body for RegisterUser for application/json ContentType.
type RegisterUserJSONRequestBody = RegisterRequest

// VerifyCodeJSONRequestBody defines body for VerifyCode for application/json ContentType.
type VerifyCodeJSONRequestBody = VerifyCodeRequest
