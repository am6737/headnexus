openapi: 3.0.0
info:
  title: Virtual LAN Management API
  description: API for managing your virtual LAN
  version: 1.0.0
servers:
  - url: http://your-api-url.com
paths:
  /api/v1/hosts/enroll/{code}:
    post:
      summary: 注册主机
      operationId: enrollHost
      tags:
        - host
#      security:
#        - BearerAuth: []
      parameters:
        - in: path
          name: code
          required: true
          schema:
            type: string
            description: 注册代码
      responses:
        '200':
          description: 注册主机成功
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EnrollHostResponse'
  /api/v1/hosts/{hostId}/config:
    get:
      summary: 获取主机配置
      operationId: getHostConfig
      tags:
        - host
      security:
        - BearerAuth: []
      parameters:
        - in: path
          name: hostId
          required: true
          schema:
            type: string
            description: 主机id
      responses:
        '200':
          description: 获取主机配置成功
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HostConfig'
  /api/v1/hosts/{hostId}/rules/{ruleId}:
    delete:
      summary: 删除主机规则
      operationId: deleteHostRule
      tags:
        - host
      security:
        - BearerAuth: []
      parameters:
        - in: path
          name: hostId
          schema:
            type: string
            description: 主机id
        - in: path
          name: ruleId
          schema:
            type: string
            description: 规则id
      responses:
        '200':
          description: 删除主机规则成功
        '404':
          description: 未找到指定规则
  /api/v1/hosts/{hostId}/rules:
    get:
      summary: 获取主机规则
      operationId: listHostRules
      tags:
        - host
      security:
        - BearerAuth: []
      parameters:
        - in: path
          name: hostId
          schema:
            type: string
            description: 主机id
        - name: page_num
          in: query
          description: 页码
          schema:
            type: integer
            default: 1
        - name: page_size
          in: query
          description: 页大小
          schema:
            type: integer
            default: 10
      responses:
        '200':
          description: 获取主机规则成功
          content:
            application/json:
              schema:
                type: object
                properties:
                  rules:
                    type: array
                    items:
                      $ref: '#/components/schemas/HostRule'
    post:
      summary: 添加主机规则
      operationId: addHostRule
      tags:
        - host
      security:
        - BearerAuth: []
      parameters:
        - in: path
          name: hostId
          schema:
            type: string
            description: 主机id
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                rules:
                  type: array
                  items:
                    type: string
                  x-omitempty: false
                  x-go-type-skip-optional-pointer: true
        responses:
          '200':
            description: 添加主机规则成功
            content:
              application/json:
                schema:
                  type: object
                  properties:
                    rules:
                      type: array
                      items:
                        $ref: '#/components/schemas/Rule'
  /api/v1/rules:
    get:
      operationId: listRule
      summary: List all rules
      tags:
        - rule
      security:
        - BearerAuth: []
      parameters:
        - in: query
          name: ruleFindOptions
          schema:
            $ref: '#/components/schemas/RuleFindOptions'
          description: Options for filtering, sorting, and pagination
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Rule'
    post:
      operationId: createRule
      summary: createRule
      tags:
        - rule
      security:
        - BearerAuth: []
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Rule'
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Rule'
  /api/v1/rules/{id}:
    delete:
      operationId: deleteRule
      summary: deleteRule
      tags:
        - rule
      security:
        - BearerAuth: []
      parameters:
        - in: path
          name: id
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Successful response
  /api/v1/hosts:
    get:
      operationId: listHost
      summary: List all hosts
      tags:
        - host
      security:
        - BearerAuth: []
      parameters:
        - in: query
          name: findOptions
          schema:
            $ref: '#/components/schemas/HostFindOptions'
          description: Options for filtering, sorting, and pagination
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ShortHost'
    post:
      operationId: createHost
      summary: 创建主机
      tags:
        - host
      security:
        - BearerAuth: []
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                name:
                  type: string
                  description: Host name
                  x-omitempty: false
                  x-go-type-skip-optional-pointer: true
                network_id:
                  type: string
                  description: Network id
                  x-omitempty: false
                  x-go-type-skip-optional-pointer: true
                public_ip:
                  type: string
                  description: 公网ip
                  pattern: "^(25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)\\.(25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)\\.(25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)\\.(25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)$"
                  x-omitempty: false
                  x-go-type-skip-optional-pointer: true
                ip_address:
                  type: string
                  description: IP address
                  x-omitempty: false
                  x-go-type-skip-optional-pointer: true
                role:
                  type: string
                  description: Host type
                  enum:
                    - none
                    - lighthouse
                  x-omitempty: false
                  x-go-type-skip-optional-pointer: true
                port:
                  type: integer
                  description: Host listening port
                  x-omitempty: false
                  x-go-type-skip-optional-pointer: true
                is_lighthouse:
                  type: boolean
                  description: SIS lighthouse
                  x-omitempty: false
                  x-go-type-skip-optional-pointer: true
                static_addresses:
                  type: array
                  items:
                    type: string
                  description: Static addresses
                  x-omitempty: false
                  x-go-type-skip-optional-pointer: true
                rules:
                  type: array
                  items:
                    type: string
                  x-omitempty: false
                  x-go-type-skip-optional-pointer: true
      responses:
        '200':
          description: 添加主机
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Host'
  /api/v1/hosts/{hostId}:
    get:
      operationId: getHost
      summary: Get a host
      tags:
        - host
      security:
        - BearerAuth: []
      parameters:
        - in: path
          name: hostId
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Host'
    put:
      operationId: updateHost
      summary: 更新主机
      tags:
        - host
      security:
        - BearerAuth: []
      parameters:
        - in: path
          name: hostId
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                name:
                  type: string
                  description: 主机名称
                  x-omitempty: false
                  x-go-type-skip-optional-pointer: true
                ip_address:
                  type: string
                  description: 主机IP
                  x-omitempty: false
                  x-go-type-skip-optional-pointer: true
                public_ip:
                  type: string
                  description: 公网IP
                  x-omitempty: false
                  x-go-type-skip-optional-pointer: true
                port:
                  type: integer
                  description: 主机端口
                  x-omitempty: false
                  x-go-type-skip-optional-pointer: true
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Host'
    delete:
      operationId: deleteHost
      summary: 删除主机
      tags:
        - host
      security:
        - BearerAuth: []
      parameters:
        - in: path
          name: hostId
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Successful response
#  /api/v1/hosts/{hostId}/enroll:
#    post:
#      operationId: createEnroll
#      summary: Create an enroll host
#      tags:
#        - host
#      security:
#        - BearerAuth: []
#      parameters:
#        - in: path
#          name: hostId
#          required: true
#          schema:
#            type: string
#      requestBody:
#        required: true
#        content:
#          application/json:
#            schema:
#              type: object
#              required:
#                - code
#              properties:
#                code:
#                  type: string
#      responses:
#        '200':
#          description: Successful response
#          content:
#            application/json:
#              schema:
#                type: object
#                properties:
#                  code:
#                    type: string
#                  lifetime_seconds:
#                    type: integer
#                    format: int64
  /api/v1/hosts/{hostId}/enroll-code:
    post:
      operationId: createEnrollCode
      summary: Create an enroll code
      tags:
        - host
      security:
        - BearerAuth: []
      parameters:
        - in: path
          name: hostId
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CreateEnrollCodeResponse'
  /api/v1/hosts/{hostId}/enroll-code-check:
    post:
      operationId: checkEnrollCode
      tags:
        - host
      security:
        - BearerAuth: []
      parameters:
        - in: path
          name: hostId
          required: true
          schema:
            type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - code
              properties:
                code:
                  type: string
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CheckEnrollCodeResponse'
  /api/v1/networks:
    get:
      operationId: getAllNetwork
      summary: List all networks
      tags:
        - network
      security:
        - BearerAuth: []
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Host'
    post:
      operationId: createNetwork
      summary: Create a new Network
      tags:
        - network
      security:
        - BearerAuth: []
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateNetworkRequest'
      responses:
        '200':
          description: 添加主机
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CreateNetworkResponse'
  /api/v1/networks/{networkId}:
    get:
      operationId: getNetwork
      summary: Get a network
      tags:
        - network
      security:
        - BearerAuth: []
      parameters:
        - in: path
          name: networkId
          required: true
          schema:
            type: string
            maxLength: 255
            minLength: 1
#            pattern: '^\S+$'
            description: Name of the network
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Network'
    put:
      operationId: updateNetwork
      summary: Update a network
      tags:
        - host
      security:
        - BearerAuth: []
      parameters:
        - in: path
          name: networkId
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Network'
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Network'
    delete:
      operationId: deleteNetwork
      summary: Delete a host
      tags:
        - host
      security:
        - BearerAuth: []
      parameters:
        - in: path
          name: networkId
          required: true
          schema:
            type: string
      responses:
        '204':
          description: Successful response
  /api/v1/users/me:
    get:
      summary: 获取当前用户信息
      operationId: getUserInfo
      tags:
        - user
      security:
        - BearerAuth: []
      responses:
        '200':
          description: 获取当前用户信息成功
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UserInfo'
  /api/v1/users/login:
    post:
      summary: 用户登录
      operationId: loginUser
      tags:
        - user
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/LoginRequest'
      responses:
        '200':
          description: 登录成功
          content:
            application/json:
              schema:
                type: object
                properties:
                  token:
                    type: string
                  user_info:
                    $ref: '#/components/schemas/UserInfo'
  /api/v1/users/register:
    post:
      summary: 用户注册
      operationId: registerUser
      tags:
        - user
      requestBody:
        content:
          application/json:
            schema:
              type: object
              required:
                  - email
                  - password
                  - confirm_password
              properties:
                name:
                  type: string
                  description: 用户名
                email:
                  type: string
                  format: email
                  example: 123@qq.com
                password:
                  type: string
                  format: password
                  example: password123
                confirm_password:
                  type: string
                  format: password
                  example: password123
      responses:
        '200':
          description: Successful response
  /api/v1/users/verify-code:
    get:
      summary: 验证验证码
      operationId: verifyCode
      parameters:
        - name: email
          in: query
          description: User email address
          required: true
          schema:
            type: string
            format: email
        - name: code
          in: query
          description: Verification code
          required: true
          schema:
            type: string
      responses:
        '204':
          description: Successful response
  /api/v1/users/change-password:
    post:
      summary: 更改用户密码
      operationId: changePassword
      tags:
        - user
      security:
        - BearerAuth: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ChangePasswordRequest'
      responses:
        '204':
          description: Successful response
  /api/v1/users/send-code:
    post:
      summary: 发送验证码
      operationId: sendCode
      tags:
        - user
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SendCodeRequest'
      responses:
        '204':
          description: Successful response
components:
  securitySchemes:
    BearerAuth:
      type: http
      scheme: bearer
      bearerFormat: JWT
  schemas:
    EnrollHostResponse:
      type: object
      required:
        - enroll_at
        - last_seen_at
        - online
        - host_id
        - config
      properties:
        config:
          type: string
        enroll_at:
          type: integer
          format: int64
        last_seen_at:
          type: string
        online:
          type: boolean
        host_id:
          type: string
    HostConfig:
      type: object
      required:
        - config
      properties:
        config:
          type: string
    HostRule:
      type: object
      required:
        - type
        - host_id
        - port
        - proto
        - action
      properties:
        type:
          type: string
          enum:
            - inbound
            - outbound
          default: inbound
          x-omitempty: false
          x-go-type-skip-optional-pointer: true
        id:
          type: string
          x-omitempty: false
          x-go-type-skip-optional-pointer: true
        created_at:
          type: string
          x-omitempty: false
          x-go-type-skip-optional-pointer: true
        name:
          type: string
          x-omitempty: false
          x-go-type-skip-optional-pointer: true
        description:
          type: string
          x-omitempty: false
          x-go-type-skip-optional-pointer: true
        host_id:
          type: string
          x-omitempty: false
          x-go-type-skip-optional-pointer: true
        port:
          type: string
          x-omitempty: false
          x-go-type-skip-optional-pointer: true
        proto:
          type: string
          enum:
            - any
            - tcp
            - udp
            - icmp
          x-omitempty: false
          x-go-type-skip-optional-pointer: true
        action:
          type: string
          enum:
            - allow
            - deny
          default: allow
          x-omitempty: false
          x-go-type-skip-optional-pointer: true
        host:
          type: array
          items:
            type: string
            pattern: '^(\d{1,3}\.){3}\d{1,3}(/(\d{1,2}|[12]\d{2}|3[0-2]))?$'
          x-omitempty: false
          x-go-type-skip-optional-pointer: true
    UserInfo:
      type: object
      required:
        - id
        - email
        - last_login_at
      properties:
        id:
          type: string
        email:
          type: string
        last_login_at:
          type: string
    Rule:
      type: object
      required:
        - type
        - port
        - proto
        - action
      properties:
        type:
          type: string
          enum:
            - inbound
            - outbound
          default: inbound
          x-omitempty: false
          x-go-type-skip-optional-pointer: true
        id:
          type: string
          x-omitempty: false
          x-go-type-skip-optional-pointer: true
        created_at:
          type: integer
          x-omitempty: false
          x-go-type-skip-optional-pointer: true
        name:
          type: string
          x-omitempty: false
          x-go-type-skip-optional-pointer: true
        description:
          type: string
          x-omitempty: false
          x-go-type-skip-optional-pointer: true
        port:
          type: string
          pattern: "^([0-9]{1,5}(-[0-9]{1,5})?,?)+$"
          x-omitempty: false
          x-go-type-skip-optional-pointer: true
        proto:
          type: string
          enum:
            - any
            - tcp
            - udp
            - icmp
          x-omitempty: false
          x-go-type-skip-optional-pointer: true
        action:
          type: string
          enum:
            - allow
            - deny
          default: allow
          x-omitempty: false
          x-go-type-skip-optional-pointer: true
        host:
          type: array
          items:
            type: string
            pattern: '^(\d{1,3}\.){3}\d{1,3}(/(\d{1,2}|[12]\d{2}|3[0-2]))?$'
          x-omitempty: false
          x-go-type-skip-optional-pointer: true
    RuleFindOptions:
      type: object
      properties:
        host_id:
          type: string
          description: Host ID
          x-omitempty: false
          x-go-type-skip-optional-pointer: true
        page_size:
          type: integer
          description: Number of results to return
          default: 10
          x-omitempty: false
          x-go-type-skip-optional-pointer: true
        page_num:
          type: integer
          description: Page number
          default: 1
          x-omitempty: false
          x-go-type-skip-optional-pointer: true
    CheckEnrollCodeResponse:
      type: object
      properties:
        exists:
          type: boolean
          description: 如果存在表示还没注册
    CreateEnrollCodeResponse:
      type: object
      properties:
        code:
          type: string
          description: The enroll code
          x-omitempty: false
          x-go-type-skip-optional-pointer: true
        lifetime_seconds:
          type: integer
          format: int64
          x-omitempty: false
          x-go-type-skip-optional-pointer: true
    HostFindOptions:
      type: object
      properties:
        filters:
          type: object
          description: Filter options
          x-omitempty: false
          x-go-type-skip-optional-pointer: true
        sort:
          type: object
          description: Sorting options
          x-omitempty: false
          x-go-type-skip-optional-pointer: true
        limit:
          type: integer
          description: Number of results to return
          default: 10
          x-omitempty: false
          x-go-type-skip-optional-pointer: true
        offset:
          type: integer
          description: Offset for pagination
          default: 0
          x-omitempty: false
          x-go-type-skip-optional-pointer: true
        network_id:
          type: string
          description: Filter by network ID
          x-omitempty: false
          x-go-type-skip-optional-pointer: true
        ip_address:
          type: string
          description: Filter by IP address
          x-omitempty: false
          x-go-type-skip-optional-pointer: true
        role:
          type: string
          description: Filter by role
          default: none
          enum:
            - none
            - lighthouse
          x-omitempty: false
          x-go-type-skip-optional-pointer: true
        name:
          type: string
          description: Filter by name
          x-omitempty: false
          x-go-type-skip-optional-pointer: true
    Network:
      type: object
      properties:
        id:
          type: string
          x-omitempty: false
          x-go-type-skip-optional-pointer: true
          description: ID of the network
        name:
          type: string
          x-omitempty: false
          x-go-type-skip-optional-pointer: true
          description: Name of the network
        cidr:
          type: string
          x-omitempty: false
          x-go-type-skip-optional-pointer: true
          description: CIDR notation of the network address and subnet mask (e.g., "192.168.1.0/24")
        created_at:
          type: string
          x-omitempty: false
          x-go-type-skip-optional-pointer: true
          description: Creation timestamp
    CreateNetworkResponse:
      type: object
      properties:
        id:
          type: string
          x-omitempty: false
          x-go-type-skip-optional-pointer: true
          description: ID of the network
        name:
          type: string
          x-omitempty: false
          x-go-type-skip-optional-pointer: true
          description: Name of the network
        cidr:
          type: string
          x-omitempty: false
          x-go-type-skip-optional-pointer: true
          description: CIDR notation of the network address and subnet mask (e.g., "192.168.1.0/24")
        createdAt:
          type: string
          x-omitempty: false
          x-go-type-skip-optional-pointer: true
      example:
        name: ExampleNetwork
        cidr: 192.168.1.0/24
    CreateNetworkRequest:
      type: object
      properties:
        name:
          type: string
          x-omitempty: false
          x-go-type-skip-optional-pointer: true
          maxLength: 255
          minLength: 1
#          pattern: '^\S+$'
          description: Name of the network
        cidr:
          type: string
          x-omitempty: false
          x-go-type-skip-optional-pointer: true
          pattern: '^(?:[0-9]{1,3}\.){3}[0-9]{1,3}/[0-9]{1,2}$'
          description: CIDR notation of the network address and subnet mask (e.g., "192.168.1.0/24")
      required:
        - cidr
      example:
        name: ExampleNetwork
        cidr: 192.168.1.0/24
    ShortHost:
      type: object
      properties:
        port:
          type: integer
          x-omitempty: false
          x-go-type-skip-optional-pointer: true
        online:
          type: boolean
          description: Whether the host is online or not
          x-omitempty: false
          x-go-type-skip-optional-pointer: true
        id:
          type: string
          x-omitempty: false
          x-go-type-skip-optional-pointer: true
          description: ID of the host
        name:
          type: string
          maxLength: 255
          minLength: 1
          x-omitempty: false
          x-go-type-skip-optional-pointer: true
        ip_address:
          type: string
          x-omitempty: false
          x-go-type-skip-optional-pointer: true
        public_ip:
          type: string
          description: Public IP address
          example: 111.1.1.1
          x-omitempty: false
          x-go-type-skip-optional-pointer: true
        created_at:
          type: string
          x-omitempty: false
          x-go-type-skip-optional-pointer: true
        last_seen_at:
          type: string
          x-omitempty: false
          x-go-type-skip-optional-pointer: true
    Host:
      type: object
      required:
        - role
      properties:
        online:
          type: boolean
          description: Whether the host is online or not
          x-omitempty: false
          x-go-type-skip-optional-pointer: true
        id:
          type: string
          x-omitempty: false
          x-go-type-skip-optional-pointer: true
          description: ID of the host
        name:
          type: string
          maxLength: 255
          minLength: 1
          x-omitempty: false
          x-go-type-skip-optional-pointer: true
        ip_address:
          type: string
          x-omitempty: false
          x-go-type-skip-optional-pointer: true
        port:
          type: integer
          x-omitempty: false
          x-go-type-skip-optional-pointer: true
        public_ip:
          type: string
          description: Public IP address
          example: 111.1.1.1
          x-omitempty: false
          x-go-type-skip-optional-pointer: true
        tags:
          type: object
          additionalProperties: true
          x-omitempty: false
          x-go-type-skip-optional-pointer: true
        static_addresses:
          type: object
          additionalProperties:
            type: string
          description: Static addresses
          example:
            "192.168.1.1": "111.1.1.1:6796"
            "192.168.1.2": "222.2.2.2:6797"
          x-omitempty: false
          x-go-type-skip-optional-pointer: true
        network_id:
          type: string
          x-omitempty: false
          x-go-type-skip-optional-pointer: true
          x-oapi-codegen-extra-tags:
            binding: required
        created_at:
          type: string
          x-omitempty: false
          x-go-type-skip-optional-pointer: true
        last_seen_at:
          type: string
          x-omitempty: false
          x-go-type-skip-optional-pointer: true
        role:
          type: string
          x-omitempty: false
          x-go-type-skip-optional-pointer: true
          enum:
            - none
            - lighthouse
    SendCodeRequest:
      type: object
      properties:
        email:
          type: string
          format: email
          example: 123@qq.com
        code:
          type: string
          example: 123456
    LoginRequest:
      type: object
      properties:
        email:
          type: string
          format: email
          example: user@example.com
        password:
          type: string
          format: password
          example: password123
    ChangePasswordRequest:
      type: object
      required:
        - old_password
        - new_password
        - confirm_password
      properties:
        old_password:
          type: string
          example: old_password123
        new_password:
          type: string
          format: password
          example: new_password123
        confirm_password:
          type: string
          format: password
          example: new_password123